{"version":3,"sources":["components/Heading.js","components/Jumbotron.js","utils/API.js","App.js","registerServiceWorker.js","components/Edit.js","components/CoSymForm.js","components/Create.js","components/Show.js","index.js"],"names":["Heading","props","Navbar","bg","expand","class","Brand","href","Toggle","aria-controls","Collapse","id","Nav","className","Link","NavDropdown","title","Item","Divider","Form","inline","FormControl","type","placeholder","Button","variant","Jumbotron","symbol","axios","get","companyName","App","state","stocks","progress","meter_color","meter_progress","meter_value","addColorToMeter","bind","then","res","setState","data","console","log","this","map","stock","i","API","ticker","low","close","high","status","size","toString","to","aria-hidden","_id","role","aria-valuenow","aria-valuemin","aria-valuemax","style","width","onClick","investors_notes","Component","Boolean","window","location","hostname","match","ServiceWorker","Edit","onChange","e","target","name","value","onSubmit","preventDefault","short_description","earnings_date","put","params","result","history","push","for","CoSymForm","companies","padding","htmlFor","handleSymbolInputChange","searchtype","handleSymbolFormSubmit","Create","post","handleInputChange","event","stockPriceSearch","companySearch","handleFormSubmit","something","monthsObject","keysArr","Object","keys","slice","length","monthArray","forEach","date","catch","err","search","error","stock_status","meter_percentage","searchJobs","cols","rows","Show","delete","ReactDOM","render","exact","path","component","document","getElementById","registerServiceWorker"],"mappings":"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","file":"static/js/main.2f6fcafe.chunk.js","sourcesContent":["import React from \"react\";\nimport {Button, Navbar, Nav, NavDropdown, Form, FormControl} from \"react-bootstrap\";\nfunction Heading(props){\n  return(\n    <Navbar bg=\"dark\" expand=\"lg\" class=\"navbar\">\n      <Navbar.Brand href=\"#home\">Ginance Furu</Navbar.Brand>\n      <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n      <Navbar.Collapse id=\"basic-navbar-nav\">\n        <Nav className=\"mr-auto\">\n          <Nav.Link href=\"#home\">Home</Nav.Link>\n          <Nav.Link href=\"#link\">Link</Nav.Link>\n          <NavDropdown title=\"Dropdown\" id=\"basic-nav-dropdown\">\n            <NavDropdown.Item href=\"#action/3.1\">Add Stock</NavDropdown.Item>\n            <NavDropdown.Item href=\"#action/3.2\">About</NavDropdown.Item>\n            <NavDropdown.Item href=\"#action/3.3\">Login</NavDropdown.Item>\n            <NavDropdown.Divider />\n            <NavDropdown.Item href=\"#action/3.4\">About</NavDropdown.Item>\n          </NavDropdown>\n        </Nav>\n        <Form inline>\n          <FormControl type=\"text\" placeholder=\"Search\" className=\"mr-sm-2\" />\n          <Button variant=\"outline-success\">Search</Button>\n        </Form>\n      </Navbar.Collapse>\n    </Navbar>\n  )\n}\n\nexport default Heading;","import React from \"react\";\nimport {Button, Navbar, Nav, NavDropdown, Form, FormControl} from \"react-bootstrap\";\nfunction Jumbotron(props){\n  return(\n    <Jumbotron fluid>\n\n      <h1>My Portfolio</h1>\n      <p>\n        View and monitor my investments\n      </p>\n  </Jumbotron>\n    )\n}\n\nexport default Jumbotron;","import axios from \"axios\";\nconst BASEURL = \"https://randomuser.me/api/?results=200&nat=us\";\n\n\nexport default {\n  search: function() {\n    return axios.get(BASEURL);\n  },\n  getStockPrices: function(symbol){\n    return axios.get(`https://www.alphavantage.co/query?function=TIME_SERIES_MONTHLY_ADJUSTED&symbol=${symbol}&apikey=OmE3MWIyM2I4Y2E4ZTg1YTU1NTdmZjlmZDllNmJlNzdh`)\n  },\n  getCompanySymbols: function(companyName){\n    return axios.get(`https://api-v2.intrinio.com/companies/${companyName}&api_key=OmFmZTU0MmEwMGNkMWQ3MDU5ZGZlMzhjOGNlZjAyYzU4`)\n  },\n  getSecuritiePrices: function(symbol){\n    return axios.get(`https://www.alphavantage.co/query?function=TIME_SERIES_DAILY&symbol=${symbol}&apikey=OmE3MWIyM2I4Y2E4ZTg1YTU1NTdmZjlmZDllNmJlNzdh`)\n  }\n  };\n\n\n\n","import React, { Component } from 'react';\n// import ReactDOM from 'react-dom';\nimport { Link } from 'react-router-dom';\nimport Heading from './components/Heading.js';\nimport Jumbotron from './components/Jumbotron.js';\nimport axios from 'axios';\nimport API from './utils/API';\n\nclass App extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      stocks: [],\n      progress: 0,\n      meter_color: '',\n      meter_progress: '',\n      meter_value: ''\n    };\n    this.addColorToMeter = this.addColorToMeter.bind(this)\n  }\n\n  componentDidMount() {\n    axios.get('/api/stocks')\n    .then(res => {\n      this.setState({ stocks: res.data });\n      console.log(this.state.stocks);\n      console.log(\"butt\");\n    });\n    //Interval to refresh the page periodically\n      // setInterval(()=>{\n      //   axios.get('/api/stocks')\n      //   .then(res => {\n      //     this.setState({ stocks: res.data });\n      //     console.log(\"Reloaded API\");\n      //   });\n      // }, 3600000);\n  };\n\n  GetClosingPrices(){\n    const {stocks} = this.state\n    stocks.map((stock, i) => {\n      // map through stocks and call api to get closing price\n      API.getSecuritiePrices(stock.ticker)\n      .then(res =>{\n        console.log(res)\n      })\n\n      // set state with new data\n\n      return true  \n    } )\n  }\n\n  //My Meter code that I'm coming back to\n// ProgressChange = (e) => {\n//   let meter_color = '';\n//   let meter_progress = '';\n//   let progress = (this.state.close-this.state.low)/(this.state.high-this.state.low);\n//   console.log(progress)\n//   if(progress < .25){\n//     meter_color = \"progress-bar progress-bar-danger\"\n//   }\n//   if(progress > .25 && progress < .50){\n//     meter_color = \"progress-bar progress-bar-warning\"\n//   }\n//   if(progress > .50 && progress < .75){\n//     meter_color = \"progress-bar progress-bar-info\"\n//   }\n//   if(progress > .75) {\n//     meter_color = \"progress-bar progress-bar-success\"\n//   }\n//   this.setState({meter_color: meter_color});\n//   console.log(this.state.progress)\n//   meter_progress = \"width:\" + progress + \"%\";\n//   this.setState({meter_progress: meter_progress});\n//   console.log(this.state.meter_progress)\n//   let meter_value = progress.toString();\n//   this.setState({meter_value: meter_value});\n// }\n\n\n  addColorToMeter(low, close, high){\n    let status = (close - low)/(high - low);\n    console.log(status)\n    if (status < 0.50) {\n      let meter_color = \"progress-bar progress-bar-danger\"\n      let size = (status * 100).toString() + \"%\"\n      this.setState({meter_progress: size})\n      this.setState({meter_value: (status * 100)})\n      this.setState({meter_color: \"progress-bar progress-bar-danger\"})\n    }\n    if (status > 0.50 && status < .75){\n      let meter_color = \"progress-bar progress-bar-warning\"\n      let size = (status * 100).toString() + \"%\"\n      this.setState({meter_progress: size})\n      this.setState({meter_value: (status * 100)})\n      this.setState({meter_color: \"progress-bar progress-bar-warning\"})\n    }\n    if (status  > 0.75){\n      let meter_color = \"progress-bar progress-bar-success\"\n      let size = (status * 100).toString() + \"%\"\n      this.setState({meter_progress: size})\n      this.setState({meter_value: (status * 100)})\n      this.setState({meter_color: \"progress-bar progress-bar-success\"})\n    }\n    // else{\n    //   // we're adding more numbers\n    //   let newEquation = equation + newLogic\n    //   this.setState({equation: newEquation})\n    // }\n  \n  };\n  \n  render() {\n    return (\n      <div>\n        <Heading />\n      <div class=\"container\">\n        <div class=\"panel panel-default\">\n          <div class=\"panel-heading\">\n            <h3 class=\"panel-title\">\n              My Portfolio\n            </h3>\n          </div>\n          <div class=\"panel-body\">\n            <h4><Link to=\"/create\"><span class=\"glyphicon glyphicon-plus-sign\" aria-hidden=\"true\"></span> Add Stock</Link></h4>\n            <table class=\"table table-stripe\">\n              <thead>\n                <tr>\n                  <th>Ticker</th>\n                  <th>Buy/Sell Meter</th>\n                  <th>Investor Notes</th>\n                  <th>Chart</th>\n                </tr>\n              </thead>\n              <tbody>\n                {this.state.stocks.map(stocks =>\n                  <tr>\n                    <td><Link to={`/show/${stocks._id}`}>{stocks.ticker}</Link></td>\n\n                    <td>\n                      {/* Low: ${stocks.low}<br></br>\n                        Close ${stocks.close}<br></br>\n                        High ${stocks.high}<br></br> */}\n  <div class=\"progress\">\n    <div class={this.state.meter_color} role=\"progressbar\" aria-valuenow={this.state.meter_value} aria-valuemin=\"0\" aria-valuemax=\"100\" style={{width: this.state.meter_progress}}>\n      ${stocks.close}\n    </div></div>\n\n\n    <div class=\"progress\">\n    <div class=\"progress-bar progress-bar-success progress-bar-striped\" role=\"progressbar\" aria-valuenow=\"40\" aria-valuemin=\"0\" aria-valuemax=\"100\" style={{width: \"40%\"}}>\n      40% Complete (success)\n    </div>\n  </div>\n\n\n    <button onClick={() => console.log(this.state)} >Color button</button>\n    <button onClick={() => this.addColorToMeter(stocks.low, stocks.close, stocks.high)} > KFC</button>\n\n\n                    </td>\n                    <td>{stocks.investors_notes}</td>\n                  </tr>\n                )}\n              </tbody>\n            </table>\n          </div>\n        </div>\n      </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n      window.addEventListener('fetch', (event) => {\n        if ( event.request.url.match( '^.*(/api/).*$' ) ) {\n          return false;\n        }\n      });\n  }\n}\nexport default ServiceWorker;","import React, { Component } from 'react';\nimport axios from 'axios';\nimport { Link } from 'react-router-dom';\n\nclass Edit extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      stocks: {}\n    };\n  }\n\n  componentDidMount() {\n    axios.get('/api/stocks/'+this.props.match.params.id)\n      .then(res => {\n        this.setState({ stocks: res.data });\n        console.log(this.state.stocks);\n      });\n  }\n\n  onChange = (e) => {\n    const state = this.state.stocks\n    state[e.target.name] = e.target.value;\n    this.setState({stocks:state});\n  }\n\n  onSubmit = (e) => {\n    e.preventDefault();\n\n    const { ticker, name, close, short_description, earnings_date, high, low } = this.state.stocks;\n\n    axios.put('/api/stocks/'+this.props.match.params.id, { ticker, name, close, short_description, earnings_date, high, low })\n      .then((result) => {\n        this.props.history.push(\"/show/\"+this.props.match.params.id)\n      });\n  }\n\n  render() {\n    return (\n      <div class=\"container\">\n        <div class=\"panel panel-default\">\n          <div class=\"panel-heading\">\n            <h3 class=\"panel-name\">\n              EDIT stocks\n            </h3>\n          </div>\n          <div class=\"panel-body\">\n            <h4><Link to={`/show/${this.state.stocks._id}`}><span class=\"glyphicon glyphicon-eye-open\" aria-hidden=\"true\"></span> Portfolio</Link></h4>\n            <form onSubmit={this.onSubmit}>\n              <div class=\"form-group\">\n                <label for=\"ticker\">ticker:</label>\n                <input type=\"text\" class=\"form-control\" name=\"ticker\" value={this.state.stocks.ticker} onChange={this.onChange} placeholder=\"ticker\" />\n              </div>\n              <div class=\"form-group\">\n                <label for=\"name\">Name:</label>\n                <input type=\"text\" class=\"form-control\" name=\"name\" value={this.state.stocks.name} onChange={this.onChange} placeholder=\"name\" />\n              </div>\n              <div class=\"form-group\">\n                <label for=\"close\">close:</label>\n                <input type=\"text\" class=\"form-control\" name=\"close\" value={this.state.stocks.close} onChange={this.onChange} placeholder=\"close\" />\n              </div>\n              <div class=\"form-group\">\n                <label for=\"investors_notes\">Investors Notes:</label>\n                <input type=\"text\" class=\"form-control\" name=\"investors_notes\" value={this.state.stocks.investors_notes} onChange={this.onChange} placeholder=\"investors_notes\" />\n              </div>\n              <div class=\"form-group\">\n                <label for=\"short_description\">Description:</label>\n                <input type=\"text\" class=\"form-control\" name=\"short_description\" value={this.state.stocks.short_description} onChange={this.onChange} placeholder=\"short_description\" />\n              </div>\n              <div class=\"form-group\">\n                <label for=\"published_date\">Earnings Date:</label>\n                <input type=\"number\" class=\"form-control\" name=\"earnings_date\" value={this.state.stocks.earnings_date} onChange={this.onChange} placeholder=\"Published Year\" />\n              </div>\n              <div class=\"form-group\">\n                <label for=\"high\">high:</label>\n                <input type=\"text\" class=\"form-control\" name=\"high\" value={this.state.stocks.high} onChange={this.onChange} placeholder=\"high\" />\n              </div>\n              <div class=\"form-group\">\n                <label for=\"low\">low:</label>\n                <input type=\"text\" class=\"form-control\" name=\"low\" value={this.state.stocks.low} onChange={this.onChange} placeholder=\"low\" />\n              </div>\n              <button type=\"submit\" class=\"btn btn-default\">Submit</button>\n            </form>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Edit;","import React from \"react\";\nimport \"./style.css\";\n\nfunction CoSymForm(props, companies) {\n  return (\n    <div className=\"card text-center float\">\n      <div className=\"card-header\">\n        <h2>Company Symbol Search </h2>\n      </div>\n      <div className=\"card-body\"></div>\n      <form>\n        <div className=\"form-group\" style={{ padding: '22px' }}>\n          <label htmlFor=\"search\">Company Symbol</label>\n          <input\n            onChange={props.handleSymbolInputChange}\n            value={props.value}\n            searchtype={props.searchtype}\n            name=\"search\"\n            type=\"text\"\n            className=\"form-control\"\n            placeholder=\"Search Symbols\"\n            id=\"search\"\n          />\n          <br />\n          <button onClick={props.handleSymbolFormSubmit} className=\"btn btn-primary\">\n            Search Company Symbol\n        </button>\n        </div>\n      </form>\n    </div>\n\n  );\n}\nexport default CoSymForm;\n","import React, { Component } from 'react';\n// import ReactDOM from 'react-dom';\nimport axios from 'axios';\nimport { Link } from 'react-router-dom';\nimport API from \"../utils/API.js\";\nimport CoSymForm from \"./CoSymForm\";\n// import Companies from \"../data/companies.json\";\n\nclass Create extends Component {\n\n  constructor() {\n    super();\n    this.state = {\n      result: [],\n      search: '',\n      searchtype: 'Company',\n      companies: '',\n      error: '',\n      ticker: '',\n      name: '',\n      close: null,\n      investors_notes: '',\n      short_description: '',\n      earnings_date: '',\n      high: null,\n      low: null,\n      stock_status: '',\n      meter_percentage: ''\n    };\n  }\n  onChange = (e) => {\n    const state = this.state\n    state[e.target.name] = e.target.value;\n    this.setState(state);\n  }\n\n  onSubmit = (e) => {\n    e.preventDefault();\n\n    const { ticker, name, close, investors_notes,short_description, earnings_date, high, low } = this.state;\n\n    axios.post('/api/stocks', { ticker, name, close, investors_notes, short_description, earnings_date, high, low })\n      .then((result) => {\n        this.props.history.push(\"/\")\n      });\n  }\n//   searchSymbols = () => {\n//     const searchQuery = this.state.search.trim();\n//     const searchResults = Companies.filter((emp) => emp.company === searchQuery);\n//     this.setState({ 'result': searchResults, 'searchtype': 'Company' });\n// console.log(\"searchSymbols?\")\n//   };\n\n//   searchJobs = event => {\n//     event.preventDefault();\n//     console.log(\"here\")\n//     const searchQuery = this.state.ticker.trim();\n//     const searchResults = Companies.filter((co) => co.company === searchQuery);\n//     this.setState({ 'result': searchResults, 'searchtype': 'coSym' });\n//     console.log(\"searchJobs\")\n//   };\n\n\n  // When this component mounts, search for the company\n  componentDidMount() {\n    // if (this.state.searchtype === \"job\") {\n    //   this.searchJobs();\n    // } else {\n    //   this.searchSymbols();\n    // }\n  }\n\n  handleInputChange = event => {\n    const value = event.target.value;\n    const name = event.target.name;\n    this.setState({\n      [name]: value\n    });\n  };\n\n  handleSymbolInputChange = event => {\n    const value = event.target.value;\n    console.log(\"Keith's tracking 1\")\n    console.log(value)\n    // const name = event.target.name;\n    this.setState({\n      ticker: value\n    });\n  };\n\n  // When the form is submitted, search the companies.json for the value of `this.state.search`\n  handleSymbolFormSubmit = event => {\n    event.preventDefault();\n    console.log(\"Keith's tracking 2 weeee\")\n    this.stockPriceSearch(this.state.ticker)\n    this.companySearch(this.state.ticker)\n    // .then(res =>{\n    //   console.log(res.data)\n    //   //let companies=res.data.companies\n    //   //console.log(res.data.companies.map(companies=> companies.ticker )))\n    //   //this.setState({companies: res.data.companies })\n    // })\n    };\n\n  handleFormSubmit = event => {\n    event.preventDefault();\n    API.getCompanySymbols(this.state.ticker)\n    .then(res =>{\n      //let companies=res.data.companies\n      //console.log(res.data.companies.map(companies=> companies.ticker )))\n      this.stockPriceSearch(res.something)\n    })\n    console.log(\"Get Co. Symbols\")\n  };\n\ncompanySearch = (symbol)=>{\n  console.log(\"lion\")\n  API.getCompanySymbols(symbol)\n  .then(res =>{\n    //let companies=res.data.companies\n    //console.log(res.data.companies.map(companies=> companies.ticker )))\n    // this.setState({companies: res.data.companies })\n    console.log(\"RIChard\")\n    console.log(res.data)\n})\nconsole.log(\"company search 2\")\n}\n  stockPriceSearch = (symbol)=>{\n    let companyArray=['OAT', 'DIS', 'AAPL']\n    //event.preventDefault();\n    //used api function to get monthly high/low stock prices\n    //and yesterday's close price\n    // for( let i = 0; i < companyArray.length; i++){\n    //   API.getStockPrices(companyArray[i])\n    // }\n    API.getStockPrices(symbol)\n    .then(res=>{\n      console.log(\"Keith symbol tracking 3\")\n      console.log((res.data))\n      let monthsObject = res.data[\"Monthly Adjusted Time Series\"]\n      \n\n      console.log(monthsObject)\n\n      // for(let month in monthsObject){\n      //   console.log(month)\n      //   //monthsObject[month]\n      // }\n\n      let keysArr = Object.keys(monthsObject);\n      keysArr = keysArr.slice(0,12);\n      console.log(keysArr)\n      console.log(keysArr.length)\n\n      const monthArray = Object.keys(monthsObject).map(i => monthsObject[i])\n      console.log(\"marray\")\n      console.log(monthArray)\n\n      let high = 0;\n      let low = 99999999;\n      keysArr.forEach(date=>{\n        // console.log(monthsObject[date][\"2. high\"])\n        if(monthsObject[date][\"2. high\"] > high){\n          high = monthsObject[date][\"2. high\"]\n        }\n        if(monthsObject[date][\"3. low\"] < low){\n          low = monthsObject[date][\"3. low\"]\n        }\n      })\n      console.log('high', high)\n      console.log('low', low)\n      //prolly put these in state\n\n      let close = monthsObject[keysArr[0]][\"4. close\"]\n      console.log('close', close)\n\n      this.setState({high: high, low: low, close: close});\n    })\n    .catch(err=>{\n      console.log(err)\n      //do something to let the user know its not a real stock symbol\n      //have an error message in the state\n    })\n  }\n\n  // searchSymbols = () => {\n  //   const searchQuery = this.state.search.trim();\n  //   const searchResults = Companies.filter((emp) => emp.company === searchQuery);\n  //   this.setState({ 'result': searchResults, 'searchtype': 'Company' });\n\n  // };\n\n  render() {\n    const { ticker, name, close, investors_notes,short_description, earnings_date, high, low } = this.state;\n    return (\n      <div class=\"container\">\n        <div class=\"panel panel-default\">\n          <div class=\"panel-heading\">\n            <h3 class=\"panel-name\">\n              ADD STOCK\n            </h3>\n          </div>\n          <div class=\"panel-body\">\n            <h4><Link to=\"/\"><span class=\"glyphicon glyphicon-th-list\" aria-hidden=\"true\"></span> Back to Portfolio</Link></h4>\n            <form onSubmit={this.onSubmit}>\n            <CoSymForm\n              searchtype={this.state.searchtype}\n              value={this.state.ticker}\n              handleSymbolInputChange={this.handleSymbolInputChange}\n              handleSymbolFormSubmit={this.handleSymbolFormSubmit}\n              searchJobs={this.searchJobs}\n            />\n              {/* <div class=\"form-group\">\n                <label for=\"ticker\">ticker:</label>\n                <input type=\"text\" class=\"form-control\" name=\"ticker\" value={ticker} onChange={this.onChange} placeholder=\"ticker\" />\n              </div> */}\n              <div class=\"form-group\">\n                <label for=\"name\">name:</label>\n                <input type=\"text\" class=\"form-control\" name=\"name\" value={name} onChange={this.onChange} placeholder=\"name\" />\n              </div>\n              <div class=\"form-group\">\n                <label for=\"close\">close:</label>\n                <input type=\"text\" class=\"form-control\" name=\"close\" value={close} onChange={this.onChange} placeholder=\"close\" />\n              </div>\n              <div class=\"form-group\">\n                <label for=\"investors_notes\">Investors Notes:</label>\n                <textArea class=\"form-control\" name=\"investors_notes\" onChange={this.onChange} placeholder=\"investors_notes\" cols=\"80\" rows=\"3\">{investors_notes}</textArea>\n              </div>\n              <div class=\"form-group\">\n                <label for=\"short_description\">short_description:</label>\n                <textArea class=\"form-control\" name=\"short_description\" onChange={this.onChange} placeholder=\"short_description\" cols=\"80\" rows=\"3\">{short_description}</textArea>\n              </div>\n              <div class=\"form-group\">\n                <label for=\"earnings_date\">Earnings Date:</label>\n                <input type=\"number\" class=\"form-control\" name=\"earnings_date\" value={earnings_date} onChange={this.onChange} placeholder=\"Earnings Date\" />\n              </div>\n              <div class=\"form-group\">\n                <label for=\"high\">high:</label>\n                <input type=\"text\" class=\"form-control\" name=\"high\" value={high} onChange={this.onChange} placeholder=\"high\" />\n              </div>\n              <div class=\"form-group\">\n                <label for=\"low\">low:</label>\n                <input type=\"text\" class=\"form-control\" name=\"low\" value={low} onChange={this.onChange} placeholder=\"low\" />\n              </div>\n              <button type=\"submit\" class=\"btn btn-default\">Submit</button>\n            </form>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Create;","import React, { Component } from 'react';\nimport axios from 'axios';\nimport { Link } from 'react-router-dom';\n\nclass Show extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      stocks: {}\n    };\n  }\n\n  componentDidMount() {\n    axios.get('/api/stocks/'+this.props.match.params.id)\n      .then(res => {\n        this.setState({ stocks: res.data });\n        console.log(this.state.stocks);\n      });\n  }\n\n  delete(id){\n    console.log(id);\n    axios.delete('/api/stocks/'+id)\n      .then((result) => {\n        this.props.history.push(\"/\")\n      });\n  }\n\n  render() {\n    return (\n      <div class=\"container\">\n        <div class=\"panel panel-default\">\n          <div class=\"panel-heading\">\n            <h3 class=\"panel-title\">\n              {this.state.stocks.title}\n            </h3>\n          </div>\n          <div class=\"panel-body\">\n            <h4><Link to=\"/\"><span class=\"glyphicon glyphicon-th-list\" aria-hidden=\"true\"></span> Portfolio</Link></h4>\n            <dl>\n              <dt>Tickers:</dt>\n              <dd>{this.state.stocks.ticker}</dd>\n              <dt>Name:</dt>\n              <dd>{this.state.stocks.name}</dd>\n              <dt>Investors Notes:</dt>\n              <dd>{this.state.stocks.investors_notes}</dd>\n              <dt>Description:</dt>\n              <dd>{this.state.stocks.short_description}</dd>\n              <dt>Earnings Date:</dt>\n              <dd>{this.state.stocks.earnings_date}</dd>\n              <dt>Close:</dt>\n              <dd>{this.state.stocks.close}</dd>\n              <dt>High:</dt>\n              <dd>{this.state.stocks.high}</dd>\n              <dt>Low:</dt>\n              <dd>{this.state.stocks.low}</dd>\n            </dl>\n            <Link to={`/edit/${this.state.stocks._id}`} class=\"btn btn-success\">Edit</Link>&nbsp;\n            <button onClick={this.delete.bind(this, this.state.stocks._id)} class=\"btn btn-danger\">Delete</button>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Show;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css';\nimport '../node_modules/bootstrap/dist/css/bootstrap-theme.min.css';\nimport './index.css';\nimport App from './App';\nimport registerServiceWorker from './registerServiceWorker';\nimport Edit from './components/Edit';\nimport Create from './components/Create';\nimport Show from './components/Show';\n\nReactDOM.render(\n  <Router>\n      <div>\n        <Route exact path='/' component={App} />\n        <Route path='/edit/:id' component={Edit} />\n        <Route path='/create' component={Create} />\n        <Route path='/show/:id' component={Show} />\n      </div>\n  </Router>,\n  document.getElementById('root')\n);\nregisterServiceWorker();\n"],"sourceRoot":""}